

<html>
<head>
<title> Dat body MCinn </title>



<form name="Show">
            <input type="text" name="MouseX" value="0" size="4"> X<br>
            <input type="text" name="MouseY" value="0" size="4"> Y<br>
      </form>


        <script type="text/javascript">

            var IE = document.all?true:false


            if (!IE) document.captureEvents(Event.MOUSEMOVE)


            document.onmousemove = getMouseXY;


            var tempX = 0
            var tempY = 0



            function getMouseXY(e) {
                if (IE) { 

                tempX = event.clientX + document.body.scrollLeft
                tempY = event.clientY + document.body.scrollTop
                } 
                else 
                {  
                 tempX = e.pageX
                 tempY = e.pageY
                }  


                document.Show.MouseX.value = tempX
                document.Show.MouseY.value = tempY

                return true
                }
        </script>



<body onload="mouse_position()">
<form name="Form1">


</form>

<!--
<object>
<param name="autostart" value="true">
<param name="src" value="blerp.m4a">
<param name="autoplay" value="true">
<param name="controller" value="false">
<embed src="blerp.m4a" controller="false" autoplay="true" autostart="True" type="audio/wav" />
</object>
</body>
-->

<script>
 myAudio = new Audio('blerp.m4a'); 
myAudio.addEventListener('ended', function() {
    this.currentTime = 0;
    this.play();
}, false);
myAudio.play(); 
// Create the filter

/*
var filter = context.createBiquadFilter();
// Create the audio graph.
source.connect(filter);
filter.connect('blerp.m4a');
// Create and specify parameters for the low-pass filter.
filter.type = 0; // Low-pass filter. See BiquadFilterNode docs
filter.frequency.value = 440; // Set cutoff to 440 HZ
// Playback the sound.
source.start(0);
*/
</script>

</head>

</html>